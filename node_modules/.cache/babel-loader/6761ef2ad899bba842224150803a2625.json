{"ast":null,"code":"var _jsxFileName = \"/Users/haoyuyang/webdev/smart-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './Components/Navigation/Navigation';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport Logo from './Components/Logo/Logo';\nimport Rank from './Components/Rank/Rank';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '080c2d8c499447cdad2c4c17128815bc'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 150\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          email: data.email,\n          name: data.name,\n          id: data.id,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        email: '',\n        name: '',\n        id: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000').then(response => response.json()).then(console.log);\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/haoyuyang/webdev/smart-brain/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Signin","Register","Logo","Rank","ImageLinkForm","FaceRecognition","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","email","name","id","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange","route","isSignedIn","componentDidMount","fetch","json","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './Components/Navigation/Navigation';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport Logo from './Components/Logo/Logo';\nimport Rank from './Components/Rank/Rank';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: '080c2d8c499447cdad2c4c17128815bc'\n});\n\nconst particlesOptions = {\n\tparticles: {\n\t\tnumber:{\n\t\t\tvalue: 30,\n\t\t\tdensity: {\n\t\t\t\tenable: true,\n\t\t\t\tvalue_area: 150\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl:'',\n      box: {},\n      route: 'signin',\n      isSignedIn:false,\n      user: {\n        email:'',\n        name:'',\n        id: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n\n loadUser = (data) => {\n    this.setState({user: {\n        email: data.email,\n        name:data.name,\n        id: data.id,\n        entries: data.entries,\n        joined: data.joined\n\n    }})\n\n } \n\ncomponentDidMount() {\n  fetch('http://localhost:3000')\n  .then(response => response.json())\n  .then(console.log)\n}\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => console.log(err));  \n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n      this.setState({isSignedIn: false})\n    } else if ( route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({ route:route});\n\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n      \t<Particles className='particles'\n            params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={ this.onRouteChange }/>\n        { route === 'home'\n          ? <div> \n              <Logo />\n              <Rank />\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n              <FaceRecognition box={ box } imageUrl={ imageUrl }/>\n           </div> \n           :(\n              route === 'signin' \n              ? <Signin onRouteChange={this.onRouteChange}/>\n              : <Register loadUser={loadUser} onRouteChange={this.onRouteChange}/>\n            )\n         }\n      </div>\n    );\n   } \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}